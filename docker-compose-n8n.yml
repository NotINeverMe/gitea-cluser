version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-n8n_secure_password_change_me}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - n8n-network
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD:-n8n_secure_password_change_me}

      # n8n Configuration
      N8N_HOST: ${N8N_HOST:-n8n.example.com}
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      N8N_EDITOR_BASE_URL: ${N8N_EDITOR_BASE_URL:-https://n8n.example.com/}
      WEBHOOK_URL: ${WEBHOOK_URL:-https://n8n.example.com/}

      # Security Configuration
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE:-true}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER:-admin}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD:-change_me_secure_password}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY:-generate_32_char_random_string}

      # Execution Configuration
      EXECUTIONS_PROCESS: main
      EXECUTIONS_TIMEOUT: 900
      EXECUTIONS_TIMEOUT_MAX: 3600
      EXECUTIONS_DATA_SAVE_ON_ERROR: all
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: all
      EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS: true
      EXECUTIONS_DATA_PRUNE: true
      EXECUTIONS_DATA_MAX_AGE: 336 # 14 days

      # Workflow Configuration
      N8N_WORKFLOW_TAGS_DISABLED: false
      N8N_PAYLOAD_SIZE_MAX: 16
      N8N_METRICS: true

      # External Hooks for Audit
      EXTERNAL_HOOK_FILES: /home/node/.n8n/hooks.js

      # Email Configuration (for alerts)
      N8N_EMAIL_MODE: smtp
      N8N_SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      N8N_SMTP_PORT: ${SMTP_PORT:-587}
      N8N_SMTP_USER: ${SMTP_USER:-your-email@example.com}
      N8N_SMTP_PASS: ${SMTP_PASS:-your-app-password}
      N8N_SMTP_SENDER: ${SMTP_SENDER:-devsecops@example.com}

      # OAuth2/OIDC Configuration (optional)
      N8N_AUTH_TYPE: ${N8N_AUTH_TYPE:-basic}
      # N8N_AUTH_GOOGLE_ENABLED: ${N8N_AUTH_GOOGLE_ENABLED:-false}
      # N8N_AUTH_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      # N8N_AUTH_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}

      # Timezone
      GENERIC_TIMEZONE: ${TZ:-America/New_York}
      TZ: ${TZ:-America/New_York}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
      - ./n8n/custom:/home/node/.n8n/custom
      - ./config/hooks.js:/home/node/.n8n/hooks.js:ro
    networks:
      - n8n-network
    ports:
      - "127.0.0.1:5678:5678"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Reverse Proxy with Caddy
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    environment:
      DOMAIN: ${N8N_HOST:-n8n.example.com}
      EMAIL: ${ACME_EMAIL:-admin@example.com}
    volumes:
      - ./config/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - n8n-network
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - n8n

  # Redis for session management (optional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_password}
    networks:
      - n8n-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  n8n-network:
    driver: bridge

volumes:
  postgres_data:
  n8n_data:
  caddy_data:
  caddy_config:
  redis_data: