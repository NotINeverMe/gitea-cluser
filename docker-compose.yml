# Phase 1A: SonarQube Security Analysis Platform
# CMMC 2.0: CA.L2-3.12.4, RA.L2-3.11.2, SI.L2-3.14.2
# NIST SP 800-171: 3.11.2, 3.11.3, 3.14.1, 3.14.2, 3.14.3
# Evidence: Container SHA256 hashes logged, scan results archived

version: '3.8'

services:
  # PostgreSQL Database for SonarQube
  # Security: Encrypted at rest, restricted network access
  postgres:
    image: postgres:15-alpine
    container_name: sonarqube-postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sonar_secure_pwd_2024}
      POSTGRES_DB: sonarqube
      # Security hardening
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    networks:
      - sonarqube-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
    security_opt:
      - no-new-privileges:true
    labels:
      compliance.cmmc: "CA.L2-3.12.4"
      compliance.nist: "3.14.2"
      security.encryption: "at-rest"

  # SonarQube Community Edition
  # Security scanning for OWASP Top 10, CWE coverage
  sonarqube:
    image: sonarqube:10.4-community
    container_name: sonarqube
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD:-sonar_secure_pwd_2024}
      # Security configurations
      SONAR_WEB_SYSTEMPASSCODE: ${SONAR_WEB_SYSTEMPASSCODE:-admin_secure_2024}
      SONAR_FORCEAUTHENTICATION: "true"
      SONAR_SECURITY_REALM: "LDAP"  # Configure for enterprise
      SONAR_LOG_LEVEL: "INFO"
      # JVM options for performance
      SONAR_CE_JAVAADDITIONALOPTS: "-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError"
      SONAR_WEB_JAVAADDITIONALOPTS: "-Xmx512m"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
      - ./config/sonar/sonar.properties:/opt/sonarqube/conf/sonar.properties:ro
    ports:
      - "9000:9000"
      - "9001:9001"  # Admin port
    networks:
      - sonarqube-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2048M
    security_opt:
      - no-new-privileges:true
    labels:
      compliance.cmmc: "RA.L2-3.11.2"
      compliance.nist: "3.11.2,3.11.3"
      security.sast: "enabled"
      security.owasp: "top10-2021"

  # Trivy Container Scanner
  # Vulnerability detection for containers and IaC
  trivy-server:
    image: aquasec/trivy:0.48.0
    container_name: trivy-server
    command: server --listen 0.0.0.0:4954
    ports:
      - "4954:4954"
    volumes:
      - trivy_cache:/root/.cache/trivy
      - ./config/trivy/trivy.yaml:/etc/trivy/trivy.yaml:ro
    networks:
      - sonarqube-net
    restart: unless-stopped
    environment:
      TRIVY_DEBUG: "false"
      TRIVY_CACHE_DIR: "/root/.cache/trivy"
      TRIVY_SEVERITY: "CRITICAL,HIGH,MEDIUM"
      TRIVY_SECURITY_CHECKS: "vuln,config,secret"
    security_opt:
      - no-new-privileges:true
    labels:
      compliance.cmmc: "SI.L2-3.14.2"
      compliance.nist: "3.14.1"
      security.container_scan: "enabled"

  # Evidence Logger Service
  # SHA-256 hashing and compliance logging
  evidence-logger:
    image: alpine:3.19
    container_name: evidence-logger
    command: |
      sh -c '
      apk add --no-cache bash curl jq openssl &&
      while true; do
        timestamp=$$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        echo "{\"timestamp\":\"$$timestamp\",\"service\":\"healthcheck\",\"status\":\"running\"}" | \
          openssl dgst -sha256 >> /var/log/evidence/audit.log
        sleep 300
      done
      '
    volumes:
      - evidence_logs:/var/log/evidence
    networks:
      - sonarqube-net
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      compliance.cmmc: "AU.L2-3.3.1"
      compliance.nist: "3.3.1,3.3.2"

networks:
  sonarqube-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
    driver_opts:
      com.docker.network.bridge.name: br-sonarqube

volumes:
  postgres_data:
    driver: local
    labels:
      backup: "daily"
      encryption: "required"
  sonarqube_data:
    driver: local
    labels:
      backup: "daily"
  sonarqube_logs:
    driver: local
    labels:
      retention: "30days"
  sonarqube_extensions:
    driver: local
  trivy_cache:
    driver: local
  evidence_logs:
    driver: local
    labels:
      retention: "7years"
      compliance: "required"