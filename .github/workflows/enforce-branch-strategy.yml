name: Enforce Branch Strategy

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  check-source-branch:
    runs-on: ubuntu-latest
    name: Verify PR is from staging branch

    steps:
      - name: Check source branch
        id: check
        run: |
          SOURCE_BRANCH="${{ github.head_ref }}"
          TARGET_BRANCH="${{ github.base_ref }}"

          echo "Source branch: $SOURCE_BRANCH"
          echo "Target branch: $TARGET_BRANCH"

          if [ "$TARGET_BRANCH" = "main" ] && [ "$SOURCE_BRANCH" != "staging" ]; then
            echo "::error::Pull requests to 'main' must originate from 'staging' branch only."
            echo "::error::Current source branch: $SOURCE_BRANCH"
            echo "::error::Please merge your changes to 'staging' first, then create a PR from 'staging' to 'main'."
            echo ""
            echo "Branch Strategy:"
            echo "  dev → staging → main"
            echo ""
            echo "Workflow:"
            echo "  1. Develop features in 'dev' branch"
            echo "  2. Test and validate in 'staging' branch"
            echo "  3. Promote to production via 'staging' → 'main' PR"
            exit 1
          fi

          echo "✅ Branch strategy validated: $SOURCE_BRANCH → $TARGET_BRANCH"

      - name: Comment on PR (if check fails)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ❌ Branch Strategy Violation

              Pull requests to \`main\` must originate from the \`staging\` branch only.

              **Current PR**: \`${{ github.head_ref }}\` → \`main\` ❌

              ### Required Workflow

              \`\`\`
              dev → staging → main
              \`\`\`

              ### Please Follow These Steps:

              1. **Close this PR**
              2. Merge your changes to \`staging\`:
                 \`\`\`bash
                 git checkout staging
                 git merge ${{ github.head_ref }}
                 git push origin staging
                 \`\`\`
              3. Create a new PR from \`staging\` → \`main\`

              ### Why This Matters

              - **Quality Gate**: All changes must be tested in staging before production
              - **Compliance**: CMMC 2.0 requires controlled promotion to production
              - **Risk Reduction**: Staging serves as final validation before production deployment

              ---

              For questions about branch strategy, see \`docs/BRANCH_STRATEGY.md\` or contact the platform team.`
            })
